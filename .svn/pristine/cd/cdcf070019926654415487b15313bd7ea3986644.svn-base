<template>
	<div>
		<div class="clearfix breadcrumb" v-show="showBackBtn">
			<span class="font">当前位置：消息管理 > {{action}}</span>
			<el-button type="primary" class="back" @click="toPreviewPage">返回上一页</el-button>
		</div>
		<div v-show="!showEditPage&&!showAddPage&&!showDetailPage">
			<div class="mg15 mg-l0">
				<span class="mg15 mg-l0">起止时间</span>
				<el-date-picker v-model="value3" type="daterange" start-placeholder="开始日期" end-placeholder="结束日期" value-format="yyyy-MM-dd" @change="getDate" size="small"></el-date-picker>
				<span>发送状态</span>
				<el-select v-model="value" placeholder="全部" class="select" size="small" @change="getFilterCondition">
					<el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value" size="small">
					</el-option>
				</el-select>
				<el-button type="text" class="button" icon="search" @click="searchMsg">查询</el-button>
				<el-button type="text" @click="addNewMessage">新建消息</el-button>
			</div>

			<el-table :data="msgList" stripe border>
				<el-table-column prop="title" label="消息标题"></el-table-column>
				<el-table-column prop="content" label="消息内容" :show-overflow-tooltip='true'></el-table-column>
				<el-table-column prop="status" label="发送状态">
					<template slot-scope='scope'>
						<span v-if="scope.row.sendStatus == 1" style="color:green">已发送</span>
						<span v-if="scope.row.sendStatus == 0" style="color:red">未发送</span>
					</template>
				</el-table-column>
				<el-table-column prop="time" label="发送时间"></el-table-column>
				<el-table-column prop="operation" label="操作">
					<template slot-scope="scope">
						<el-button type="text" @click="openDetails(scope.row)">详情</el-button>
						<el-button type="text" v-show="scope.row.sendStatus == 0"  @click.native.prevent="confirm(scope.$index, msgList)">
							删除</el-button>
						<el-button @click="editSelectedMsg(scope.row)" type="text"
							v-show="scope.row.sendStatus == '0'">编辑</el-button>	
					</template>
				</el-table-column>
			</el-table>

			<div class="mg15 mg-r0 pull-right">
				<el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage1" :page-sizes="[10, 20, 50, 100]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="totalCount">
				</el-pagination>
			</div>
		</div>

		<div v-show="showAddPage">
			<addMessage @close="closeChild" @addSuccess="reloadMsgList"></addMessage>
		</div>

		<div v-show="showEditPage">
			<editMessage :message="selectedMsg" @close="closeEditPage"></editMessage>
		</div>

		<div v-show="showDetailPage">
			<sentMsgDetail :message="message"></sentMsgDetail>
		</div>
	</div>
</template>

<script>
	import addMessage from './addMessage.vue';
	import sentMsgDetail from './sentMsgDetail.vue';
	import editMessage from './editMessage.vue';
	export default {
		components: {
			addMessage,
			editMessage,
			sentMsgDetail
		},
		data() {
			return {
				startTime:'',
				endTime:'',
				msgList:[],
				message:{},//查看详情的消息
				selectedMsg:{},
				sendStatus:'2',
				pageIndex:1,
				pageSize:10,
				totalCount:0,
				action:'详情',

				options: [{
						value: '2',
						label: '全部'
					}, {
						value: '1',
						label: '已发送'
					},
					{
						value: '0',
						label: '未发送'
					}
				],

				tableData: [{
					title: '平台升级通知',
					message: '尊敬的用户，今晚21点至23点平台升级今晚21点至23点平台升级...',
					status: '未发送',
					time: '2017-08-22 16:41:20',
				}, {
					title: '平台升级通知',
					message: '尊敬的用户，今晚21点至23点平台升级...',
					status: '已发送',
					time: '2017-08-20 10:01:15',
				}],

				currentPage1: 1,
				showEditPage:false,
				showDetailPage:false,
				showAddPage:false,
				showBackBtn:false,
				willShow: true,
				value: '',
				value3: '',
			};
		},
		methods: {
			addNewMessage(){
				let _this = this;
				_this.willShow = !_this.willShow;
				_this.showBackBtn = true;
				_this.showAddPage = true;
				_this.showEditPage = false;
				_this.showDetailPage = false;
				_this.action = "新增消息";
			},
			editSelectedMsg(msg){
				// console.log("要编辑的消息："+msg.title+msg.content);
				let _this = this;
				_this.willShow = !_this.willShow;
				_this.showBackBtn = true;
				_this.showAddPage = false;
				_this.showDetailPage = false;
				_this.showEditPage = true;
				_this.selectedMsg = msg;
				_this.action="编辑消息";
			},
			judgeDataIsNull(data){//判断数据是否为空，空字符串或空对象都返回true，否则返回false，即数据不为空
				if (data == undefined || data == null || data == "" || JSON.stringify(data) == "{}") {
					return true;
				}else{
					return false;
				}
			},
			getMsgList:function(){
				let _this = this;
				let param = {
					'param':{
						'startTime':_this.startTime,
						'endTime':_this.endTime,
						'sendStatus':_this.sendStatus,
						'pageIndex':_this.pageIndex,
						'pageSize':_this.pageSize
					}
				};
				_this.$api.vkcPost("supermarketloan/mgr/messageManagementList",param,res =>{
						console.log("信息管理："+res.code+"，msg："+res.msg+"，data:"+res.data)
					if (!_this.judgeDataIsNull(res)) {
						if (res.code == 0 || res.code == "0") {
							_this.totalCount = res.totalCount;
							_this.msgList = res.data;
						}else{
							this.$message(res.msg);
						}
					}
				},'all');
			},
			reloadMsgList(){
				this.showBackBtn = false;
				this.showDetailPage = false;
				this.showAddPage = false;
				this.showEditPage = false;
				this.startTime = "";
				this.endTime = "";
				this.sendStatus = "2";
				this.getMsgList();
			},
			getFilterCondition(filterCondition){
				// console.log("选择的筛选条件："+filterCondition);
				this.sendStatus = filterCondition;
				// this.getMsgList();
			},
			closeChild() {
				// this.willShow = !this.willShow;
				this.showAddPage = false;
				this.showBackBtn = false;
			},
			getDate(val) {
				if(!val) return;
				this.startTime = val[0];
				this.endTime = val[1];
			},
			searchMsg(){
				this.getMsgList();
			},
			handleSizeChange(val) {
				// console.log(`每页 ${val} 条`);
				this.pageIndex = 1;
				this.pageSize = val;
				this.getMsgList();
			},
			handleCurrentChange(val) {
				// console.log(`当前页: ${val}`);
				this.pageIndex = val;
				this.getMsgList();
			},

			deleteRow(index, rows) {//删除未发送的消息
				let _this = this;
				let msg = rows[index];
				console.log("要删除的消息："+msg.title+","+msg.content+",id:"+msg.id+",发送状态："+msg.sendStatus);
				let param = {
					'param':{
						'id':msg.id+'',
						'sendStatus':msg.sendStatus+''
					}
				};
				_this.$api.vkcPost("supermarketloan/mgr/lookOrDeleteMessageDetail",param,res => {
					if (!_this.judgeDataIsNull(res)) {
						if (res.code == 0 || res.code =="0" ) {
							rows.splice(index, 1);
							this.$message({
                                message: res.msg,
                                type: "success"
                            });
						}else{
							this.$message.error(res.msg);
						}
					}
				},'all');
			},
			closeEditPage(){
				this.showBackBtn =false;
				this.showEditPage = false;
				this.getMsgList();
			},
			toPreviewPage(){
				this.showBackBtn = false;
				this.showDetailPage = false;
				this.showAddPage = false;
				this.showEditPage = false;
				this.getMsgList();
			},
			openDetails(showWhat) {
				this.showBackBtn = true;
				this.showDetailPage = true;
				this.showAddPage = false;
				this.showEditPage = false;
				this.message = showWhat;
				this.action="详情";
			},
			confirm(index,rows) {
				this.$confirm('确定要删除该条消息吗？', '提示', {
					confirmButtonText: '确定',
					cancelButtonText: '取消',
					type: 'warning'
				}).then(() => {
					this.deleteRow(index,rows);
					// this.$message({
					// 	type: 'success',
					// 	message: '删除成功!'
					// });
				}).catch(() => {
					this.$message({
						type: 'info',
						message: '已取消删除'
					});
				});
			}
		},
		created(){
			this.getMsgList();
		}
	};
</script>