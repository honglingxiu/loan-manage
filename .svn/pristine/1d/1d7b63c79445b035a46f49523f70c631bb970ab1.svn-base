<template>
    <div>
        <jb-breadcrumb @handleBack="$router.back()">当前位置：短信管理 > 短信列表 > 新增短信</jb-breadcrumb>
        <el-form :model="formData" ref="formData" label-position="left" label-width="100px" :rules="rules">
            <el-form-item label="短信内容：" prop="message">
                <div class="flex align-end">
                    <jb-smsNumber v-model="formData.message" class="flex-auto mg-r20"></jb-smsNumber>
                    <el-button type="primary" @click="selectTemplate()" style="margin-bottom:40px">选择模板</el-button>
                </div>
            </el-form-item>
            <el-form-item label="产品名称：" prop="loanProductId">
                <el-select v-model="formData.loanProductId" filterable placeholder="请选择" class="width300" @change="selectProduct">
                    <el-option v-for="item in productList" :key="item.loanProductId" :label="item.productName" :value="item.loanProductId"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="发送号码：" prop="phoneItem">
                <el-input type="textarea" class="width300 mg-r20" :autosize="{ minRows: 10,maxRows: 16}" v-model="formData.phoneItem"></el-input>
                <el-button type="primary" size="mini" @click="$refs.selectPhone.openDialog()">选择</el-button>
            </el-form-item>
        </el-form>
        <jb-smsTemplate ref="smsTemplate" v-model="smsTemplate" @handConfirm="formData.message=smsTemplate"></jb-smsTemplate>
        <jb-selectPhone v-model="formData.phoneItem" ref="selectPhone" :productList="productList"></jb-selectPhone>
        <div class="mg15 text-center">
            <el-button @click="$router.back()">取消</el-button>
            <el-button type="primary" @click="confirm('formData')">提交</el-button>
        </div>
    </div>
</template>

<script>
export default {
    data() {
        return {
            smsTemplate: "",
            productList: [],
            formData: {
                productName: "",
                loanProductId: "",
                message: "",
                phoneItem: ""
            },
            rules: {
                loanProductId: [{ required: true, message: "请选择产品名称", trigger: "blur" }],
                message: [{ required: true, message: "请输入短信内容", trigger: "blur" }],
                phoneItem: [{ required: true, message: "请选择发送号码", trigger: "blur" }]
            }
        };
    },
    methods: {
        selectTemplate() {
            if (this.$refs.smsTemplate.templateList.length > 0) {
                this.$refs.smsTemplate.dialogVisible = true;
            } else {
                this.$alert("暂无短信模板", { showClose: false });
            }
        },
        selectProduct(id) {
            for (const item of this.productList) {
                if (item.loanProductId === id) {
                    this.formData.productName = item.productName;
                    return;
                }
            }
        },
        getAllProduct() {
            this.$api.vkcPost("supermarketloan/mgr/loanapply/getAllProduct", "", res => {
                this.productList = res;
            });
        },
        confirm(form) {
            this.$refs[form].validate(valid => {
                if (valid) {
                    this.$api.showLoading("正在提交，请稍后...");
                    let { phoneItem, ...formData } = this.formData;
                    let param = {
                        ...formData,
                        phone: phoneItem
                    };
                    // console.log(param);
                    this.$api.vkcPost2("supermarketloan/crm/addSms", param, res => {
                        // console.log(res);
                        this.$api.hideLoading();
                        if (res) {
                            this.$alert("提交成功", {
                                showClose: false,
                                callback: action => {
                                    this.$router.back();
                                }
                            });
                        }
                    });
                }
            });
        }
    },
    created() {
        this.getAllProduct();
    }
};
</script>