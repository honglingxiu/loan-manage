<template>
    <div class="login-wrap">
        <div class="ms-title">管理平台</div>
        <div class="ms-login">
            <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="0px">
                <el-form-item prop="userName">
                    <el-input v-model="ruleForm.userName" placeholder="请输入用户名"></el-input>
                </el-form-item>
                <el-form-item prop="passWord">
                    <el-input type="password" placeholder="请输入密码" v-model="ruleForm.passWord" @keyup.enter.native="submitForm('ruleForm')"></el-input>
                </el-form-item>
                <div class="login-btn">
                    <el-button type="primary" @click="submitForm('ruleForm')">登录</el-button>
                </div>
            </el-form>
        </div>
    </div>
</template>

<script>
export default {
    data: function() {
        return {
            nextUrl: "",
            ruleForm: {
                userName: "",
                passWord: ""
            },
            rules: {
                userName: [{ required: true, message: "请输入用户名", trigger: "blur" }],
                passWord: [{ required: true, message: "请输入密码", trigger: "blur" }]
            }
        };
    },
    methods: {
        submitForm(formName) {
            this.$refs[formName].validate(valid => {
                if (valid) {
                    let param = { userName: this.ruleForm.userName, passWord: this.ruleForm.passWord };
                    this.$api.vkcPost2(
                        "supermarketloan/crm/login",
                        param,
                        res => {
                          let userInfo = {
                                username: this.ruleForm.userName,
                                sessionId: res.sessionId,
                                crmMenus: res.data.crmMenus,
                                userType: res.data.userType
                            };
                            this.$api.setLStorage("loanuser", userInfo, "encode");
                            if (this.$api.getSStorage("sessionCode") === "101") {
                                sessionStorage.removeItem("sessionCode");
                                this.$router.replace(this.nextUrl);
                                return;
                            }
                            if (userInfo.userType === "customerManage" || userInfo.userType === "customerSuperior") {
                                this.$router.push("/clue");
                                return;
                            }
                            this.$router.push("/home");
                        },
                        "getAllData"
                    );
                } else {
                    console.log("error submit!!");
                    return false;
                }
            });
        }
    },
    beforeRouteEnter(to, from, next) {
        next(vm => {
            vm.nextUrl = from.path;
        });
    },
    created() {
        let userInfo = this.$api.getLStorage("loanuser", "decode");
        if (userInfo) {
            this.ruleForm.userName = userInfo.username;
        }
    }
};
</script>

<style scoped>
.login-wrap {
    position: relative;
    width: 100%;
    height: 100%;
}
.ms-title {
    position: absolute;
    top: 50%;
    width: 100%;
    margin-top: -230px;
    text-align: center;
    font-size: 30px;
    color: #fff;
}
.ms-login {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 380px;
    margin: -150px 0 0 -190px;
    padding: 40px;
    border-radius: 5px;
    background: #fff;
}
.login-btn {
    text-align: center;
}
.login-btn button {
    width: 100%;
    height: 36px;
}
</style>
